package jedis_test;

import java.util.List;

import redis.clients.jedis.Jedis;

/**
 * @author lzw
 * @version 创建时间：2016年6月14日 下午4:57:51
 * @Description:
 */
public class jedisTest {
	//Jedis jedis=null;
	public static void main(String[] args) throws InterruptedException {
		//先打开jedis服务器
				// 连接本地的 Redis 服务
		Jedis jedis = JedisUtil.getConnection();
		System.out.println("Connection to server sucessfully");
		// 查看服务是否运行
		System.out.println("Server is running: " + jedis.ping());
				
				//new jedisTest().testString(jedis);
//		while(true)
//			Thread.sleep(3000);
		System.out.println(System.currentTimeMillis());
//		System.out.println(jedis.get("name3456"));
//		 List<String> rsmap = jedis.hmget("user13656", "name");
//	       System.out.println(rsmap);
		jedis.select(2);
		jedis.set("name","汤唯");
//		jedis.quit();
//        jedis.close();
		
		System.out.println(System.currentTimeMillis());
//		for(int i=0;i<5000000;i++){
//			jedis.set("name"+i,"往往"+i);
//			
//			 Map map = new HashMap();
//		       map.put("name", "22"+i);
//		       map.put("age", "22"+i);
//		       map.put("qq", "22"+i);
//		       jedis.hmset("user"+i,map);
//		}
		System.out.println(System.currentTimeMillis());
	}
	
////	　　1.redis存储字符串
//	//   @Test
	   public  void testString(Jedis jedis) {
	       //-----添加数据----------
	       jedis.set("name","往往");//向key-->name中放入了value--xinxin
	       System.out.println(jedis.get("name"));//执行结果：xinxin
	       jedis.append("name", " is my lover"); //拼接
	       System.out.println(jedis.get("name"));
	       
	       jedis.del("name");  //删除某个键
	       System.out.println(jedis.get("name"));
	       
	       //设置多个键值对
	       jedis.mset("name","liuling","age","23","qq","476777XXX");
	       System.out.println(jedis.get("age"));
	       jedis.incr("age"); //进行加1操作
	       System.out.println(jedis.get("age"));
	       System.out.println(jedis.get("name") + "-" + jedis.get("age") + "-" + jedis.get("qq"));
	   }
////	　　2.redis操作Map
////	    @Test
//	   public static void testMap() {
//	       //-----添加数据----------
//	       Map<String, String> map = new HashMap<String, String>();
//	       map.put("name", "xinxin");
//	       map.put("age", "22");
//	       map.put("qq", "123456");
//	       jedis.hmset("user",map);
//	       //取出user中的name，执行结果:[minxr]-->注意结果是一个泛型的List
//	       //第一个参数是存入redis中map对象的key，后面跟的是放入map中的对象的key，后面的key可以跟多个，是可变参数
//	       List<String> rsmap = jedis.hmget("user", "name", "age", "qq");
//	       System.out.println(rsmap);
//	       //删除map中的某个键值
//	       jedis.hdel("user","age");
//	       System.out.println(jedis.hmget("user", "age")); //因为删除了，所以返回的是null
//	       System.out.println(jedis.hlen("user")); //返回key为user的键中存放的值的个数2
//	       System.out.println(jedis.exists("user"));//是否存在key为user的记录 返回true
//	       System.out.println(jedis.hkeys("user"));//返回map对象中的所有key
//	       System.out.println(jedis.hvals("user"));//返回map对象中的所有value
//	       Iterator<String> iter=jedis.hkeys("user").iterator();
//	       while (iter.hasNext()){
//	           String key = iter.next();
//	           System.out.println(key+":"+jedis.hmget("user",key));
//	       }
//	   }
////	　　3.jedis操作List
////	    @Test
//	   public void testList(){
//	       //开始前，先移除所有的内容
//	       jedis.del("java framework");
//	       System.out.println(jedis.lrange("java framework",0,-1));
//	       //先向key java framework中存放三条数据
//	       jedis.lpush("java framework","spring");
//	       jedis.lpush("java framework","struts");
//	       jedis.lpush("java framework","hibernate");
//	       //再取出所有数据jedis.lrange是按范围取出，
//	       // 第一个是key，第二个是起始位置，第三个是结束位置，jedis.llen获取长度 -1表示取得所有
//	       System.out.println(jedis.lrange("java framework",0,-1));
//	       jedis.del("java framework");
//	       jedis.rpush("java framework","spring");
//	       jedis.rpush("java framework","struts");
//	       jedis.rpush("java framework","hibernate");
//	       System.out.println(jedis.lrange("java framework",0,-1));
//	   }
//	//　　4. jedis操作Set
////    @Test
//   public void testSet(){
//       jedis.del("user");
//       //添加
//       jedis.sadd("user","liuling");
//       jedis.sadd("user","xinxin");
//       jedis.sadd("user","ling");
//       jedis.sadd("user","zhangxinxin");
//       jedis.sadd("user","who");
//       //移除noname
//       jedis.srem("user","who");
//       System.out.println(jedis.smembers("user"));//获取所有加入的value
//       System.out.println(jedis.sismember("user", "xinxin"));//判断 who 是否是user集合的元素
//       System.out.println(jedis.srandmember("user")); //随机返回一个user中元素的value
//       System.out.println(jedis.scard("user"));//返回集合的元素个数
//   } 
//	  
//	  //5.jedis 排序
//	   public void test() throws InterruptedException {
//	       //
//	       //注意，此处的rpush和lpush是List的操作。是一个双向链表（但从表现来看的）
//	       jedis.del("a");//先清除数据，再加入数据进行测试
//	       jedis.rpush("a", "1");
//	       jedis.lpush("a","6");
//	       jedis.lpush("a","3");
//	       jedis.lpush("a","9");
//	       System.out.println(jedis.lrange("a",0,-1));// [9, 3, 6, 1]
//	       System.out.println(jedis.sort("a")); //[1, 3, 6, 9]  //输入排序后结果
//	       System.out.println(jedis.lrange("a",0,-1));
//	   }
//	
//	

}
